[2025-07-10T12:30:08.175+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: northwind.carregamento_postgres manual__2025-07-10T12:29:20.413772+00:00 [queued]>
[2025-07-10T12:30:08.188+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: northwind.carregamento_postgres manual__2025-07-10T12:29:20.413772+00:00 [queued]>
[2025-07-10T12:30:08.189+0000] {taskinstance.py:2170} INFO - Starting attempt 1 of 2
[2025-07-10T12:30:08.207+0000] {taskinstance.py:2191} INFO - Executing <Task(DockerOperator): carregamento_postgres> on 2025-07-10 12:29:20.413772+00:00
[2025-07-10T12:30:08.216+0000] {standard_task_runner.py:60} INFO - Started process 186 to run task
[2025-07-10T12:30:08.224+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'northwind', 'carregamento_postgres', 'manual__2025-07-10T12:29:20.413772+00:00', '--job-id', '17', '--raw', '--subdir', 'DAGS_FOLDER/northwind.py', '--cfg-path', '/tmp/tmpah3dquyv']
[2025-07-10T12:30:08.228+0000] {standard_task_runner.py:88} INFO - Job 17: Subtask carregamento_postgres
[2025-07-10T12:30:08.296+0000] {task_command.py:423} INFO - Running <TaskInstance: northwind.carregamento_postgres manual__2025-07-10T12:29:20.413772+00:00 [running]> on host 7ad2b0e001d7
[2025-07-10T12:30:08.385+0000] {taskinstance.py:2480} INFO - Exporting env vars: AIRFLOW_CTX_DAG_EMAIL='lrbf@cin.ufpe.br' AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='northwind' AIRFLOW_CTX_TASK_ID='carregamento_postgres' AIRFLOW_CTX_EXECUTION_DATE='2025-07-10T12:29:20.413772+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-07-10T12:29:20.413772+00:00'
[2025-07-10T12:30:08.453+0000] {docker.py:359} INFO - Starting docker container from image meltano:latest
[2025-07-10T12:30:08.919+0000] {docker.py:429} INFO - Running meltano install...
[2025-07-10T12:30:11.188+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:11.187845Z[0m [[32m[1minfo     [0m] [1mInstalling 7 plugins          [0m
[2025-07-10T12:30:11.203+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:11.202617Z[0m [[32m[1minfo     [0m] [1mInstalling extractor 'tap-postgres'[0m
[2025-07-10T12:30:11.254+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:11.252840Z[0m [[32m[1minfo     [0m] [1mInstalling extractor 'tap-csv'[0m
[2025-07-10T12:30:11.286+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:11.285830Z[0m [[32m[1minfo     [0m] [1mInstalling extractor 'tap-csv-latest'[0m
[2025-07-10T12:30:11.324+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:11.323554Z[0m [[32m[1minfo     [0m] [1mInstalling loader 'target-postgres'[0m
[2025-07-10T12:30:11.361+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:11.360704Z[0m [[32m[1minfo     [0m] [1mInstalling loader 'target-csv'[0m
[2025-07-10T12:30:11.398+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:11.397423Z[0m [[32m[1minfo     [0m] [1mInstalling loader 'target-csv-postgres'[0m
[2025-07-10T12:30:11.441+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:11.440513Z[0m [[32m[1minfo     [0m] [1mInstalling loader 'target-csv-csv'[0m
[2025-07-10T12:30:12.536+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:12.534643Z[0m [[32m[1minfo     [0m] [1mInstalled extractor 'tap-postgres'[0m
[2025-07-10T12:30:12.573+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:12.572684Z[0m [[32m[1minfo     [0m] [1mInstalled loader 'target-postgres'[0m
[2025-07-10T12:30:17.744+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:17.743059Z[0m [[32m[1minfo     [0m] [1mInstalled extractor 'tap-csv-latest'[0m
[2025-07-10T12:30:17.752+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:17.751435Z[0m [[32m[1minfo     [0m] [1mInstalled extractor 'tap-csv' [0m
[2025-07-10T12:30:18.477+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:18.477010Z[0m [[32m[1minfo     [0m] [1mInstalled loader 'target-csv' [0m
[2025-07-10T12:30:18.630+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:18.629932Z[0m [[32m[1minfo     [0m] [1mInstalled loader 'target-csv-csv'[0m
[2025-07-10T12:30:18.703+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:18.702122Z[0m [[32m[1minfo     [0m] [1mInstalled loader 'target-csv-postgres'[0m
[2025-07-10T12:30:18.703+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:18.702780Z[0m [[32m[1minfo     [0m] [1mInstalled 7/7 plugins         [0m
[2025-07-10T12:30:20.004+0000] {docker.py:429} INFO - Meltano install completed. Executing command: bash -c meltano config tap-csv-latest set csv_files_definition /opt/meltano/config/tap-csv-latest.json && meltano el tap-csv-latest target-postgres
[2025-07-10T12:30:21.556+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:21.555521Z[0m [[32m[1minfo     [0m] [1mThe default environment 'dev' will be ignored for `meltano config`. To configure a specific environment, please use the option `--environment=<environment name>`.[0m
[2025-07-10T12:30:21.897+0000] {docker.py:429} INFO - Extractor 'tap-csv-latest' setting 'csv_files_definition' was set in `meltano.yml`: '/opt/meltano/config/tap-csv-latest.json'
[2025-07-10T12:30:24.483+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:24.482439Z[0m [[32m[1minfo     [0m] [1mEnvironment 'dev' is active   [0m
[2025-07-10T12:30:25.066+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:25.065307Z[0m [[32m[1minfo     [0m] [1mRunning extract & load...     [0m [36mname[0m=[35mmeltano[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m
[2025-07-10T12:30:26.219+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:26.218225Z[0m [[32m[1minfo     [0m] [1mBeginning full_table sync of 'order_details'...[0m [36mcmd_type[0m=[35mextractor[0m [36mname[0m=[35mtap-csv-latest[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m [36mstdio[0m=[35mstderr[0m
[2025-07-10T12:30:26.219+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:26.218987Z[0m [[32m[1minfo     [0m] [1mTap has custom mapper. Using 1 provided map(s).[0m [36mcmd_type[0m=[35mextractor[0m [36mname[0m=[35mtap-csv-latest[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m [36mstdio[0m=[35mstderr[0m
[2025-07-10T12:30:26.383+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:26.382095Z[0m [[32m[1minfo     [0m] [1mtarget-postgres v0.4.3, Meltano SDK v0.47.4[0m [36mcmd_type[0m=[35mloader[0m [36mname[0m=[35mtarget-postgres[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m [36mstdio[0m=[35mstderr[0m
[2025-07-10T12:30:26.384+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:26.383638Z[0m [[32m[1minfo     [0m] [1m/opt/meltano/.meltano/loaders/target-postgres/venv/lib/python3.9/site-packages/singer_sdk/plugin_base.py:715: SingerSDKDeprecationWarning: Passing a list of config file paths is deprecated. Please pass the config as a dictionary instead.[0m [36mcmd_type[0m=[35mloader[0m [36mname[0m=[35mtarget-postgres[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m [36mstdio[0m=[35mstderr[0m
[2025-07-10T12:30:26.385+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:26.384762Z[0m [[32m[1minfo     [0m] [1m  super().__init__(           [0m [36mcmd_type[0m=[35mloader[0m [36mname[0m=[35mtarget-postgres[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m [36mstdio[0m=[35mstderr[0m
[2025-07-10T12:30:26.387+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:26.385471Z[0m [[32m[1minfo     [0m] [1m                              [0m [36mcmd_type[0m=[35mloader[0m [36mname[0m=[35mtarget-postgres[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m [36mstdio[0m=[35mstderr[0m
[2025-07-10T12:30:26.387+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:26.385802Z[0m [[32m[1minfo     [0m] [1mSkipping parse of env var settings...[0m [36mcmd_type[0m=[35mloader[0m [36mname[0m=[35mtarget-postgres[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m [36mstdio[0m=[35mstderr[0m
[2025-07-10T12:30:26.388+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:26.386405Z[0m [[32m[1minfo     [0m] [1mTraceback (most recent call last):[0m [36mcmd_type[0m=[35mloader[0m [36mname[0m=[35mtarget-postgres[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m [36mstdio[0m=[35mstderr[0m
[2025-07-10T12:30:26.389+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:26.386798Z[0m [[32m[1minfo     [0m] [1m  File "/opt/meltano/.meltano/loaders/target-postgres/venv/bin/target-postgres", line 8, in <module>[0m [36mcmd_type[0m=[35mloader[0m [36mname[0m=[35mtarget-postgres[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m [36mstdio[0m=[35mstderr[0m
[2m2025-07-10T12:30:26.387743Z[0m [[32m[1minfo     [0m] [1m    sys.exit(TargetPostgres.cli())[0m [36mcmd_type[0m=[35mloader[0m [36mname[0m=[35mtarget-postgres[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m [36mstdio[0m=[35mstderr[0m
[2m2025-07-10T12:30:26.388246Z[0m [[32m[1minfo     [0m] [1m  File "/opt/meltano/.meltano/loaders/target-postgres/venv/lib/python3.9/site-packages/click/core.py", line 1161, in __call__[0m [36mcmd_type[0m=[35mloader[0m [36mname[0m=[35mtarget-postgres[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m [36mstdio[0m=[35mstderr[0m
[2025-07-10T12:30:26.393+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:26.391715Z[0m [[32m[1minfo     [0m] [1m    return self.main(*args, **kwargs)[0m [36mcmd_type[0m=[35mloader[0m [36mname[0m=[35mtarget-postgres[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m [36mstdio[0m=[35mstderr[0m
[2025-07-10T12:30:26.395+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:26.392754Z[0m [[32m[1minfo     [0m] [1m  File "/opt/meltano/.meltano/loaders/target-postgres/venv/lib/python3.9/site-packages/click/core.py", line 1082, in main[0m [36mcmd_type[0m=[35mloader[0m [36mname[0m=[35mtarget-postgres[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m [36mstdio[0m=[35mstderr[0m
[2m2025-07-10T12:30:26.393926Z[0m [[32m[1minfo     [0m] [1m    rv = self.invoke(ctx)     [0m [36mcmd_type[0m=[35mloader[0m [36mname[0m=[35mtarget-postgres[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m [36mstdio[0m=[35mstderr[0m
[2025-07-10T12:30:26.396+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:26.395074Z[0m [[32m[1minfo     [0m] [1m  File "/opt/meltano/.meltano/loaders/target-postgres/venv/lib/python3.9/site-packages/singer_sdk/plugin_base.py", line 98, in invoke[0m [36mcmd_type[0m=[35mloader[0m [36mname[0m=[35mtarget-postgres[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m [36mstdio[0m=[35mstderr[0m
[2025-07-10T12:30:26.396+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:26.395575Z[0m [[32m[1minfo     [0m] [1m    return super().invoke(ctx)[0m [36mcmd_type[0m=[35mloader[0m [36mname[0m=[35mtarget-postgres[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m [36mstdio[0m=[35mstderr[0m
[2025-07-10T12:30:26.396+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:26.395888Z[0m [[32m[1minfo     [0m] [1m  File "/opt/meltano/.meltano/loaders/target-postgres/venv/lib/python3.9/site-packages/click/core.py", line 1443, in invoke[0m [36mcmd_type[0m=[35mloader[0m [36mname[0m=[35mtarget-postgres[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m [36mstdio[0m=[35mstderr[0m
[2025-07-10T12:30:26.397+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:26.396183Z[0m [[32m[1minfo     [0m] [1m    return ctx.invoke(self.callback, **ctx.params)[0m [36mcmd_type[0m=[35mloader[0m [36mname[0m=[35mtarget-postgres[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m [36mstdio[0m=[35mstderr[0m
[2025-07-10T12:30:26.397+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:26.396462Z[0m [[32m[1minfo     [0m] [1m  File "/opt/meltano/.meltano/loaders/target-postgres/venv/lib/python3.9/site-packages/click/core.py", line 788, in invoke[0m [36mcmd_type[0m=[35mloader[0m [36mname[0m=[35mtarget-postgres[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m [36mstdio[0m=[35mstderr[0m
[2025-07-10T12:30:26.397+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:26.396746Z[0m [[32m[1minfo     [0m] [1m    return __callback(*args, **kwargs)[0m [36mcmd_type[0m=[35mloader[0m [36mname[0m=[35mtarget-postgres[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m [36mstdio[0m=[35mstderr[0m
[2025-07-10T12:30:26.397+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:26.397005Z[0m [[32m[1minfo     [0m] [1m  File "/opt/meltano/.meltano/loaders/target-postgres/venv/lib/python3.9/site-packages/singer_sdk/target_base.py", line 583, in invoke[0m [36mcmd_type[0m=[35mloader[0m [36mname[0m=[35mtarget-postgres[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m [36mstdio[0m=[35mstderr[0m
[2025-07-10T12:30:26.398+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:26.397570Z[0m [[32m[1minfo     [0m] [1m    target = cls(             [0m [36mcmd_type[0m=[35mloader[0m [36mname[0m=[35mtarget-postgres[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m [36mstdio[0m=[35mstderr[0m
[2025-07-10T12:30:26.398+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:26.397933Z[0m [[32m[1minfo     [0m] [1m  File "/opt/meltano/.meltano/loaders/target-postgres/venv/lib/python3.9/site-packages/target_postgres/target.py", line 62, in __init__[0m [36mcmd_type[0m=[35mloader[0m [36mname[0m=[35mtarget-postgres[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m [36mstdio[0m=[35mstderr[0m
[2025-07-10T12:30:26.399+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:26.398667Z[0m [[32m[1minfo     [0m] [1m    assert (self.config.get("sqlalchemy_url") is not None) or ([0m [36mcmd_type[0m=[35mloader[0m [36mname[0m=[35mtarget-postgres[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m [36mstdio[0m=[35mstderr[0m
[2025-07-10T12:30:26.399+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:26.399086Z[0m [[32m[1minfo     [0m] [1mAssertionError: Need either the sqlalchemy_url to be set or host, port, user, password, and dialect+driver to be set[0m [36mcmd_type[0m=[35mloader[0m [36mname[0m=[35mtarget-postgres[0m [36mrun_id[0m=[35m9af6589f-6e89-4292-a628-443cdcc1563e[0m [36mstate_id[0m=[35m2025-07-10T123024--tap-csv-latest--target-postgres[0m [36mstdio[0m=[35mstderr[0m
[2025-07-10T12:30:26.944+0000] {docker.py:429} INFO - [2m2025-07-10T12:30:26.500165Z[0m [[31m[1merror    [0m] [1m                              [0m
[31m╭─[0m[31m────────────────────[0m[31m [0m[1;31mTraceback [0m[1;2;31m(most recent call last)[0m[31m [0m[31m─────────────────────[0m[31m─╮[0m
[31m│[0m [2m/venv/lib/python3.9/site-packages/meltano/core/logging/[0m[1moutput_logger.py[0m:217  [31m│[0m
[31m│[0m in redirect_logging                                                          [31m│[0m
[31m│[0m                                                                              [31m│[0m
[31m│[0m   [2m214 [0m[2m│   │   │   [0m*ignore_errors,                                            [31m│[0m
[31m│[0m   [2m215 [0m[2m│   │   [0m)                                                              [31m│[0m
[31m│[0m   [2m216 [0m[2m│   │   [0m[94mtry[0m:                                                           [31m│[0m
[31m│[0m [31m❱ [0m217 [2m│   │   │   [0m[94myield[0m                                                      [31m│[0m
[31m│[0m   [2m218 [0m[2m│   │   [0m[94mexcept[0m ignored_errors:                                         [31m│[0m
[31m│[0m   [2m219 [0m[2m│   │   │   [0m[94mraise[0m                                                      [31m│[0m
[31m│[0m   [2m220 [0m[2m│   │   [0m[94mexcept[0m RunnerError [94mas[0m err:                                     [31m│[0m
[31m│[0m                                                                              [31m│[0m
[31m│[0m [2m/venv/lib/python3.9/site-packages/meltano/cli/[0m[1melt.py[0m:475 in _redirect_output [31m│[0m
[31m│[0m                                                                              [31m│[0m
[31m│[0m   [2m472 [0m[2m│   [0m[94mwith[0m meltano_stdout.redirect_logging(ignore_errors=(CliError,)):   [31m│[0m
[31m│[0m   [2m473 [0m[2m│   │   [0m[94masync[0m [94mwith[0m meltano_stdout.redirect_stdout(), meltano_stderr.re [31m│[0m
[31m│[0m   [2m474 [0m[2m│   │   │   [0m[94mtry[0m:                                                       [31m│[0m
[31m│[0m [31m❱ [0m475 [2m│   │   │   │   [0m[94myield[0m                                                  [31m│[0m
[31m│[0m   [2m476 [0m[2m│   │   │   [0m[94mexcept[0m CliError [94mas[0m err:                                    [31m│[0m
[31m│[0m   [2m477 [0m[2m│   │   │   │   [0merr.print()                                            [31m│[0m
[31m│[0m   [2m478 [0m[2m│   │   │   │   [0m[94mraise[0m                                                  [31m│[0m
[31m│[0m                                                                              [31m│[0m
[31m│[0m [2m/venv/lib/python3.9/site-packages/meltano/cli/[0m[1melt.py[0m:508 in _run_elt         [31m│[0m
[31m│[0m                                                                              [31m│[0m
[31m│[0m   [2m505 [0m[2m│   │   │   [0m[94mif[0m elt_context.only_transform:                             [31m│[0m
[31m│[0m   [2m506 [0m[2m│   │   │   │   [0mlog.info([33m"[0m[33mExtract & load skipped.[0m[33m"[0m)                    [31m│[0m
[31m│[0m   [2m507 [0m[2m│   │   │   [0m[94melse[0m:                                                      [31m│[0m
[31m│[0m [31m❱ [0m508 [2m│   │   │   │   [0m[94mawait[0m _run_extract_load(log, elt_context, output_logge [31m│[0m
[31m│[0m   [2m509 [0m[2m│   │   │   [0m                                                           [31m│[0m
[31m│[0m   [2m510 [0m[2m│   │   │   [0m[94mif[0m elt_context.transformer:                                [31m│[0m
[31m│[0m   [2m511 [0m[2m│   │   │   │   [0mlog.warning(                                           [31m│[0m
[31m│[0m                                                                              [31m│[0m
[31m│[0m [2m/venv/lib/python3.9/site-packages/meltano/cli/[0m[1melt.py[0m:581 in                  [31m│[0m
[31m│[0m _run_extract_load                                                            [31m│[0m
[31m│[0m                                                                              [31m│[0m
[31m│[0m   [2m578 [0m[2m│   │   │   [0m[94mwith[0m loader_log.line_writer() [94mas[0m loader_log_writer:        [31m│[0m
[31m│[0m   [2m579 [0m[2m│   │   │   │   [0m[94mwith[0m extractor_out_writer_ctxmgr() [94mas[0m extractor_out_wr [31m│[0m
[31m│[0m   [2m580 [0m[2m│   │   │   │   │   [0m[94mwith[0m loader_out_writer_ctxmgr() [94mas[0m loader_out_writ [31m│[0m
[31m│[0m [31m❱ [0m581 [2m│   │   │   │   │   │   [0m[94mawait[0m singer_runner.run(                       [31m│[0m
[31m│[0m   [2m582 [0m[2m│   │   │   │   │   │   │   [0m**kwargs,                                  [31m│[0m
[31m│[0m   [2m583 [0m[2m│   │   │   │   │   │   │   [0mextractor_log=extractor_log_writer,        [31m│[0m
[31m│[0m   [2m584 [0m[2m│   │   │   │   │   │   │   [0mloader_log=loader_log_writer,              [31m│[0m
[31m│[0m                                                                              [31m│[0m
[31m│[0m [2m/venv/lib/python3.9/site-packages/meltano/core/runner/[0m[1msinger.py[0m:229 in run   [31m│[0m
[31m│[0m                                                                              [31m│[0m
[31m│[0m   [2m226 [0m[2m│   │   │   [0mtap.prepared([96mself[0m.context.session),                        [31m│[0m
[31m│[0m   [2m227 [0m[2m│   │   │   [0mtarget.prepared([96mself[0m.context.session),                     [31m│[0m
[31m│[0m   [2m228 [0m[2m│   │   [0m):                                                             [31m│[0m
[31m│[0m [31m❱ [0m229 [2m│   │   │   [0m[94mawait[0m [96mself[0m.invoke(  [2m# noqa: RET503[0m                         [31m│[0m
[31m│[0m   [2m230 [0m[2m│   │   │   │   [0mtap,                                                   [31m│[0m
[31m│[0m   [2m231 [0m[2m│   │   │   │   [0mtarget,                                                [31m│[0m
[31m│[0m   [2m232 [0m[2m│   │   │   │   [0mextractor_log=extractor_log,                           [31m│[0m
[31m│[0m                                                                              [31m│[0m
[31m│[0m [2m/venv/lib/python3.9/site-packages/meltano/core/runner/[0m[1msinger.py[0m:148 in       [31m│[0m
[31m│[0m invoke                                                                       [31m│[0m
[31m│[0m                                                                              [31m│[0m
[31m│[0m   [2m145 [0m[2m│   │   │   │   │   [0m)                                                  [31m│[0m
[31m│[0m   [2m146 [0m[2m│   │   │   │   [0m                                                       [31m│[0m
[31m│[0m   [2m147 [0m[2m│   │   │   │   [0mfailed_future = output_futures_failed.pop()            [31m│[0m
[31m│[0m [31m❱ [0m148 [2m│   │   │   │   [0m[94mraise[0m failed_future.exception()                        [31m│[0m
[31m│[0m   [2m149 [0m[2m│   │   │   [0m                                                           [31m│[0m
[31m│[0m   [2m150 [0m[2m│   │   │   [0m[2m# If all of the output handlers completed without raising [0m [31m│[0m
[31m│[0m   [2m151 [0m[2m│   │   │   [0m[2m# exception, we still need to wait for the tap or target t[0m [31m│[0m
[31m│[0m                                                                              [31m│[0m
[31m│[0m [2m/venv/lib/python3.9/site-packages/meltano/core/logging/[0m[1mutils.py[0m:305 in       [31m│[0m
[31m│[0m capture_subprocess_output                                                    [31m│[0m
[31m│[0m                                                                              [31m│[0m
[31m│[0m   [2m302 [0m[2m│   │   │   [0m[94mcontinue[0m                                                   [31m│[0m
[31m│[0m   [2m303 [0m[2m│   │   [0m                                                               [31m│[0m
[31m│[0m   [2m304 [0m[2m│   │   [0m[94mfor[0m writer [95min[0m line_writers:                                    [31m│[0m
[31m│[0m [31m❱ [0m305 [2m│   │   │   [0m[94mif[0m [95mnot[0m [94mawait[0m _write_line_writer(writer, line):             [31m│[0m
[31m│[0m   [2m306 [0m[2m│   │   │   │   [0m[2m# If the destination stream is closed, we can stop cap[0m [31m│[0m
[31m│[0m   [2m307 [0m[2m│   │   │   │   [0m[94mreturn[0m                                                 [31m│[0m
[31m│[0m   [2m308 [0m                                                                       [31m│[0m
[31m│[0m                                                                              [31m│[0m
[31m│[0m [2m/venv/lib/python3.9/site-packages/meltano/core/logging/[0m[1mutils.py[0m:273 in       [31m│[0m
[31m│[0m _write_line_writer                                                           [31m│[0m
[31m│[0m                                                                              [31m│[0m
[31m│[0m   [2m270 [0m[2m│   │   │   [0mwriter.write(line)                                         [31m│[0m
[31m│[0m   [2m271 [0m[2m│   │   │   [0m[94mawait[0m writer.drain()                                       [31m│[0m
[31m│[0m   [2m272 [0m[2m│   │   [0m[94mexcept[0m ([96mBrokenPipeError[0m, [96mConnectionResetError[0m):                [31m│[0m
[31m│[0m [31m❱ [0m273 [2m│   │   │   [0m[94mawait[0m writer.wait_closed()                                 [31m│[0m
[31m│[0m   [2m274 [0m[2m│   │   │   [0m[94mreturn[0m [94mFalse[0m                                               [31m│[0m
[31m│[0m   [2m275 [0m[2m│   [0m[94melse[0m:                                                              [31m│[0m
[31m│[0m   [2m276 [0m[2m│   │   [0mwriter.writeline(line.decode(errors=[33m"[0m[33mreplace[0m[33m"[0m))                [31m│[0m
[31m│[0m                                                                              [31m│[0m
[31m│[0m [2m/usr/local/lib/python3.9/asyncio/[0m[1mstreams.py[0m:359 in wait_closed               [31m│[0m
[31m│[0m                                                                              [31m│[0m
[31m│[0m   [2m356 [0m[2m│   │   [0m[94mreturn[0m [96mself[0m._transport.is_closing()                            [31m│[0m
[31m│[0m   [2m357 [0m[2m│   [0m                                                                   [31m│[0m
[31m│[0m   [2m358 [0m[2m│   [0m[94masync[0m [94mdef[0m[90m [0m[92mwait_closed[0m([96mself[0m):                                       [31m│[0m
[31m│[0m [31m❱ [0m359 [2m│   │   [0m[94mawait[0m [96mself[0m._protocol._get_close_waiter([96mself[0m)                   [31m│[0m
[31m│[0m   [2m360 [0m[2m│   [0m                                                                   [31m│[0m
[31m│[0m   [2m361 [0m[2m│   [0m[94mdef[0m[90m [0m[92mget_extra_info[0m([96mself[0m, name, default=[94mNone[0m):                      [31m│[0m
[31m│[0m   [2m362 [0m[2m│   │   [0m[94mreturn[0m [96mself[0m._transport.get_extra_info(name, default)           [31m│[0m
[31m│[0m                                                                              [31m│[0m
[31m│[0m [2m/venv/lib/python3.9/site-packages/meltano/core/logging/[0m[1mutils.py[0m:271 in       [31m│[0m
[31m│[0m _write_line_writer                                                           [31m│[0m
[31m│[0m                                                                              [31m│[0m
[31m│[0m   [2m268 [0m[2m│   [0m[94mif[0m [96misinstance[0m(writer, asyncio.StreamWriter):                       [31m│[0m
[31m│[0m   [2m269 [0m[2m│   │   [0m[94mtry[0m:                                                           [31m│[0m
[31m│[0m   [2m270 [0m[2m│   │   │   [0mwriter.write(line)                                         [31m│[0m
[31m│[0m [31m❱ [0m271 [2m│   │   │   [0m[94mawait[0m writer.drain()                                       [31m│[0m
[31m│[0m   [2m272 [0m[2m│   │   [0m[94mexcept[0m ([96mBrokenPipeError[0m, [96mConnectionResetError[0m):                [31m│[0m
[31m│[0m   [2m273 [0m[2m│   │   │   [0m[94mawait[0m writer.wait_closed()                                 [31m│[0m
[31m│[0m   [2m274 [0m[2m│   │   │   [0m[94mreturn[0m [94mFalse[0m                                               [31m│[0m
[31m│[0m                                                                              [31m│[0m
[31m│[0m [2m/usr/local/lib/python3.9/asyncio/[0m[1mstreams.py[0m:387 in drain                     [31m│[0m
[31m│[0m                                                                              [31m│[0m
[31m│[0m   [2m384 [0m[2m│   │   │   [0m[2m# in a loop would never call connection_lost(), so it[0m      [31m│[0m
[31m│[0m   [2m385 [0m[2m│   │   │   [0m[2m# would not see an error when the socket is closed.[0m        [31m│[0m
[31m│[0m   [2m386 [0m[2m│   │   │   [0m[94mawait[0m sleep([94m0[0m)                                             [31m│[0m
[31m│[0m [31m❱ [0m387 [2m│   │   [0m[94mawait[0m [96mself[0m._protocol._drain_helper()                           [31m│[0m
[31m│[0m   [2m388 [0m                                                                       [31m│[0m
[31m│[0m   [2m389 [0m                                                                       [31m│[0m
[31m│[0m   [2m390 [0m[94mclass[0m[90m [0m[4;92mStreamReader[0m:                                                    [31m│[0m
[31m│[0m                                                                              [31m│[0m
[31m│[0m [2m/usr/local/lib/python3.9/asyncio/[0m[1mstreams.py[0m:197 in _drain_helper             [31m│[0m
[31m│[0m                                                                              [31m│[0m
[31m│[0m   [2m194 [0m[2m│   │   [0m[94massert[0m waiter [95mis[0m [94mNone[0m [95mor[0m waiter.cancelled()                    [31m│[0m
[31m│[0m   [2m195 [0m[2m│   │   [0mwaiter = [96mself[0m._loop.create_future()                            [31m│[0m
[31m│[0m   [2m196 [0m[2m│   │   [0m[96mself[0m._drain_waiter = waiter                                    [31m│[0m
[31m│[0m [31m❱ [0m197 [2m│   │   [0m[94mawait[0m waiter                                                   [31m│[0m
[31m│[0m   [2m198 [0m[2m│   [0m                                                                   [31m│[0m
[31m│[0m   [2m199 [0m[2m│   [0m[94mdef[0m[90m [0m[92m_get_close_waiter[0m([96mself[0m, stream):                               [31m│[0m
[31m│[0m   [2m200 [0m[2m│   │   [0m[94mraise[0m [96mNotImplementedError[0m                                      [31m│[0m
[31m╰──────────────────────────────────────────────────────────────────────────────╯[0m
[1;91mBrokenPipeError[0m
[2025-07-10T12:30:26.979+0000] {docker.py:429} INFO - Need help fixing this problem? Visit http://melta.no/ for troubleshooting steps, or to
join our friendly Slack community.
[2025-07-10T12:30:28.651+0000] {taskinstance.py:2698} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.10/site-packages/airflow/models/taskinstance.py", line 433, in _execute_task
    result = execute_callable(context=context, **execute_callable_kwargs)
  File "/home/airflow/.local/lib/python3.10/site-packages/airflow/providers/docker/operators/docker.py", line 502, in execute
    return self._run_image()
  File "/home/airflow/.local/lib/python3.10/site-packages/airflow/providers/docker/operators/docker.py", line 376, in _run_image
    return self._run_image_with_mounts(self.mounts, add_tmp_variable=False)
  File "/home/airflow/.local/lib/python3.10/site-packages/airflow/providers/docker/operators/docker.py", line 437, in _run_image_with_mounts
    raise DockerContainerFailedException(f"Docker container failed: {result!r}", logs=log_lines)
airflow.providers.docker.exceptions.DockerContainerFailedException: Docker container failed: {'StatusCode': 1}
[2025-07-10T12:30:28.663+0000] {taskinstance.py:1138} INFO - Marking task as UP_FOR_RETRY. dag_id=northwind, task_id=carregamento_postgres, execution_date=20250710T122920, start_date=20250710T123008, end_date=20250710T123028
[2025-07-10T12:30:28.707+0000] {standard_task_runner.py:107} ERROR - Failed to execute job 17 for task carregamento_postgres (Docker container failed: {'StatusCode': 1}; 186)
[2025-07-10T12:30:28.738+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 1
[2025-07-10T12:30:28.789+0000] {taskinstance.py:3280} INFO - 0 downstream tasks scheduled from follow-on schedule check
